// 定義默認值
const defaultGameData = {
    playerId: '0001', // A unique identifier for the player, often generated by the system
    playerName: 'Joker',
    stats: {
        experience: 0,
        level: 1
    },
    playerHealth: 100,
    playerMana: 50,
    armor: 'Leather Armor', // A basic starting armor
    weapon: 'Wooden Sword', // A basic starting weapon
    accessories: ['Simple Ring'], // A simple starting accessory
    inventory: [
        'Health Potion', // Basic items in the player's inventory
        'Mana Potion',
        'Gold Coin (10)' // Assume the player starts with a small amount of currency
    ],
    skills: [
        'Basic Strike', // A simple attack skill
        'Block' // A basic defensive skill
    ],
    quests: [
        { id: 'qst001', name: 'Find the Lost Sheep', status: 'Not Started' }
    ],
    location: 'Starting Village',
    playTime: 0,
    achievements: [],
    settings: {
        volume: 70, // A comfortable starting volume setting
        difficulty: 'Normal', // Default difficulty setting
        language: 'en' // Default language setting
    },
    currency: {
        gold: 10, // Starting amount of gold
        gems: 0 // Premium currencies are often earned or purchased, not given at the start
    }
};
// 假設這些值已經在其他地方被初始化和更新
// 现在将 defaultGameData 中的属性赋给相应的变量
let playerId = defaultGameData.playerId;
let playerName = defaultGameData.playerName;
let playerHealth = defaultGameData.playerHealth;
let playerMana = defaultGameData.playerMana;
let experience = defaultGameData.stats.experience;
let level = defaultGameData.stats.level;
let armor = defaultGameData.armor;
let weapon = defaultGameData.weapon;
let accessories = defaultGameData.accessories;
let inventory = defaultGameData.inventory;
let skills = defaultGameData.skills;
let quests = defaultGameData.quests;
let currentLocation = defaultGameData.location;
let playTime = defaultGameData.playTime;
let achievements = defaultGameData.achievements;
let settings = defaultGameData.settings;
let gold = defaultGameData.currency.gold;
let gems = defaultGameData.currency.gems;

// 函數從LocalStorage載入遊戲進度
function loadGame() {
    // 嘗試從LocalStorage中獲取遊戲數據
    let gameData = JSON.parse(localStorage.getItem('gameData'));
    console.log("localStorage getItem")

    // 如果LocalStorage中沒有數據，使用默認值
    if (!gameData||gameData.playerId==null) {
        gameData = defaultGameData;
    }

    // 更新HTML內容
    playerId = gameData.playerId;
    playerName = gameData.playerName;
    stats = gameData.stats;
    health = stats.health;
    mana = stats.mana;
    experience = stats.experience;
    level = stats.level;
    equipment = gameData.equipment;
    armor = equipment.armor;
    weapon = equipment.weapon;
    accessories = equipment.accessories;
    inventory = gameData.inventory;
    skills = gameData.skills;
    quests = gameData.quests;
    currentLocation  = gameData.currentLocation ;
    playTime = gameData.playTime;
    achievements = gameData.achievements;
    settings = gameData.settings;
    currency = gameData.currency;
    gold = currency.gold;
    gems = currency.gems;
    document.getElementById('player-name').textContent = playerName;
    document.getElementById('player-health').textContent = playerHealth;
    document.getElementById('player-mana').textContent = playerMana;
}

// 函數保存遊戲進度到LocalStorage
function saveGameToLocal() {
    // 如果你需要将这些变量再次组合回一个对象，可以这样做：
    const gameData = {
        playerId,
        playerName,
        stats: {
            health: playerHealth,
            mana: playerMana,
            experience,
            level
        },
        equipment: {
            armor,
            weapon,
            accessories
        },
        inventory,
        skills,
        quests,
        location: currentLocation,
        playTime,
        achievements,
        settings,
        currency: {
            gold,
            gems
        }
    };    
    // 現在gameData物件會使用上面定義的變量值
    
    // 將遊戲數據保存到LocalStorage
    localStorage.setItem('gameData', JSON.stringify(gameData));
    console.log('Saving game state to local storage');
    playTime++
    document.getElementById('playTime').textContent = playTime;
}


// 頁面加載時，載入遊戲進度
loadGame();

// 定時保存遊戲進度
setInterval(saveGameToLocal, 1000); // 每5秒保存一次遊戲

// 绑定beforeunload事件 在瀏覽器關閉時執行
window.addEventListener('beforeunload', (event) => {
    // 在这里保存游戏状态
    saveGameToLocal();
})






function loadProgress() {
    fetch('http://127.0.0.1:5000/load')
    .then(response => response.json())
    .then(data => {
        console.log('Loaded progress:', data);
        // 在这里您可以根据加载的数据更新游戏状态
    })
    .catch(error => console.error('Error:', error));
}

// 示例调用
// loadProgress();

function saveProgress(progress) {
    fetch('http://127.0.0.1:5000/save', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(progress)
    })
    .then(response => response.json())
    .then(data => console.log(data))
    .catch(error => console.error('Error:', error));
}

// 示例调用
// saveProgress({ name: "玩家1", health: 80, mana: 30 });